import java.util.ArrayDeque;
import java.util.Deque;

public class Solution {
    private static int[][] dir = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};

    private class Coord {
        int x, y;
        Coord(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }

    private boolean checkBound(int i, int j, int index, int h, int w) {
        if ((i + dir[index][0] < 0) || (j + dir[index][1] < 0)) return false;
        if ((i + dir[index][0] >= h) || (j + dir[index][1] >= w)) return false;
        return true;
    }

    private void bfs(char[][] grid, int x, int y) {
        int h = grid.length, w = grid[0].length;
        Deque<Coord> deque = new ArrayDeque<>();
        deque.add(new Coord(x, y));
        while (!deque.isEmpty()) {
            Coord current = deque.pollFirst();
            int i = current.x;
            int j = current.y;
            for (int index = 0; index < 4; index++) {
                if (checkBound(i, j, index, h, w) && (grid[i + dir[index][0]][j + dir[index][1]] == '1')) {
                    grid[i + dir[index][0]][j + dir[index][1]] = '0';
                    deque.addLast(new Coord(i + dir[index][0], j + dir[index][1]));
                }
            }
        }
    }

    public int numIslands(char[][] grid) {
        int ans = 0;
        if (grid.length <= 0) return 0;
        int h = grid.length, w = grid[0].length;
        for (int i = 0; i < h; i++) {
            for (int j = 0; j < w; j++) {
                if (grid[i][j] == '1') {
                    ans++;
                    grid[i][j] = '0';
                    bfs(grid, i, j);
                }
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        System.out.println(new Solution().numIslands(new char[][] {
                {'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},
                {'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},
                {'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},
                {'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},
                {'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
                {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
        }));
    }
}
